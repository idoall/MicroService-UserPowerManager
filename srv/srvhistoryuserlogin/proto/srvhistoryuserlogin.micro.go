// Code generated by protoc-gen-micro. DO NOT EDIT.
// source: srv/srvhistoryuserlogin/proto/srvhistoryuserlogin.proto

/*
Package SrvHistoryUserLogin is a generated protocol buffer package.

It is generated from these files:
	srv/srvhistoryuserlogin/proto/srvhistoryuserlogin.proto

It has these top-level messages:
	AddRequest
	AddResponse
*/
package SrvHistoryUserLogin

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/idoall/MicroService-UserPowerManager/srv/srvusers/proto"

import (
	context "context"
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for SrvHistoryUserLogin service

type SrvHistoryUserLoginService interface {
	// 添回一条记录
	Add(ctx context.Context, in *AddRequest, opts ...client.CallOption) (*AddResponse, error)
}

type srvHistoryUserLoginService struct {
	c    client.Client
	name string
}

func NewSrvHistoryUserLoginService(name string, c client.Client) SrvHistoryUserLoginService {
	if c == nil {
		c = client.NewClient()
	}
	if len(name) == 0 {
		name = "SrvHistoryUserLogin"
	}
	return &srvHistoryUserLoginService{
		c:    c,
		name: name,
	}
}

func (c *srvHistoryUserLoginService) Add(ctx context.Context, in *AddRequest, opts ...client.CallOption) (*AddResponse, error) {
	req := c.c.NewRequest(c.name, "SrvHistoryUserLogin.Add", in)
	out := new(AddResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for SrvHistoryUserLogin service

type SrvHistoryUserLoginHandler interface {
	// 添回一条记录
	Add(context.Context, *AddRequest, *AddResponse) error
}

func RegisterSrvHistoryUserLoginHandler(s server.Server, hdlr SrvHistoryUserLoginHandler, opts ...server.HandlerOption) error {
	type srvHistoryUserLogin interface {
		Add(ctx context.Context, in *AddRequest, out *AddResponse) error
	}
	type SrvHistoryUserLogin struct {
		srvHistoryUserLogin
	}
	h := &srvHistoryUserLoginHandler{hdlr}
	return s.Handle(s.NewHandler(&SrvHistoryUserLogin{h}, opts...))
}

type srvHistoryUserLoginHandler struct {
	SrvHistoryUserLoginHandler
}

func (h *srvHistoryUserLoginHandler) Add(ctx context.Context, in *AddRequest, out *AddResponse) error {
	return h.SrvHistoryUserLoginHandler.Add(ctx, in, out)
}
